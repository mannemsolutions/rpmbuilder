name: Release workflow for tagged versions
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  release:
    types:
      - published

env:
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  builder_images:
    strategy:
      matrix:
        include:
          #- baseimage: rockylinux
          #  version: "8"
          #  arch: arm64
          #- baseimage: rockylinux
          #  version: "9"
          #  arch: arm64
          #- baseimage: fedora
          #  version: "39"
          #  arch: arm64
          #- baseimage: fedora
          #  version: "40"
          #  arch: arm64
          #- baseimage: fedora
          #  version: "41"
          #  arch: arm64
          #- baseimage: fedora
          #  version: "42"
          #  arch: arm64
          #- baseimage: rockylinux
          #  version: "8"
          #  arch: amd64
          - baseimage: rockylinux
            version: "9"
            arch: amd64
          #- baseimage: fedora
          #  version: "39"
          #  arch: amd64
          #- baseimage: fedora
          #  version: "40"
          #  arch: amd64
          #- baseimage: fedora
          #  version: "41"
          #  arch: amd64
          #- baseimage: fedora
          #  version: "42"
          #  arch: amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=builder-${{ matrix.baseimage }},enable=true
          tags: |
            type=raw,value=${{ matrix.version }}

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: docker/rpmtools
          push: false
          load: true
          platforms: 'linux/${{ matrix.arch }}'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASEIMAGE=${{ matrix.baseimage }}:${{ matrix.version }}

  build_specs:
    strategy:
      matrix:
        arch:
          #- arm64
          - amd64
    runs-on: ubuntu-latest
    outputs:
      myspecs: ${{ steps.spec_matrix.outputs.myspecs }}
    steps:
      - uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: update to docker-compose v2
        run: |
          sudo apt-get install -y curl
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: create folders as required
        run: |
          mkdir -p rpms specs
          chmod 777 rpms specs

      - name: generate specs
        run: |
          docker-compose up specgen --exit-code-from specgen
        env:
          DOCKER_DEFAULT_PLATFORM: linux/${{ matrix.arch }}
          DOCKER_BUILDKIT: 1

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-specs
          path: specs/

      - id: spec_matrix
        run: |
          scripts/speclist_as_json.sh >> $GITHUB_OUTPUT


  build_rpms:
    strategy:
      matrix: ${{ fromJson(needs.build_specs.outputs.myspecs) }}

    runs-on: ubuntu-latest
    needs:
      - builder_images
      - build_specs
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.arch }}-specs
          path: specs/

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: update to docker-compose v2
        run: |
          sudo apt-get install -y curl
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: build rpm
        run: |
          docker-compose up rpmbuilder --exit-code-from rpmbuilder
        env:
          DOCKER_DEFAULT_PLATFORM: linux/${{ matrix.arch }}
          DOCKER_BUILDKIT: 1
          BASEIMAGE: "${{ matrix.baseimage }}"

      - name: sign rpm's
        run: |
          docker-compose up rpmsigner --exit-code-from rpmsigner

      - name: Add rpm's to release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            rpms/*

  download_rpms:
    runs-on: ubuntu-latest
    needs:
      - builder_images
    steps:
      - uses: actions/checkout@v4

      - name: update to docker-compose v2
        run: |
          sudo apt-get install -y curl
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: create folders as required
        run: |
          mkdir -p rpms
          chmod 777 rpms

      - name: download rpm's
        run: |
          docker-compose up rpmdownloader --exit-code-from rpmdownloader

      - name: sign rpm's
        run: |
          docker-compose up rpmsigner --exit-code-from rpmsigner

      - name: Add rpm's to release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            rpms/*
